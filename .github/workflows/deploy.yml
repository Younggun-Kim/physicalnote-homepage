name: physicalnote-web
on:
  push:
    branches: [main, develop, release]
  pull_request:

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 11
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' || github.ref == 'refs/heads/develop' && github.event_name == 'push' || github.ref == 'refs/heads/release' && github.event_name == 'push' }}

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
          role-duration-seconds: 1200
          role-session-name: PhysicalNoteDeploySession

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Check out the repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.15.0

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install

      - name: Build and Export
        run: |
          yarn build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
          ENV_PREFIX_PATH: ${{ secrets.ENV_PREFIX_PATH }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to S3
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 rm s3://physicalnote-web --recursive
          aws s3 cp --recursive --region ap-northeast-2 ./out s3://physicalnote-web

      - name: Clear Cache to Cloudfront
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws cloudfront create-invalidation --distribution-id E2O8I07THOV3LN --paths "/*"
